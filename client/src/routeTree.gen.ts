/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NavImport } from './routes/_nav'
import { Route as IndexImport } from './routes/index'
import { Route as NavGuestImport } from './routes/_nav/_guest'
import { Route as NavAuthImport } from './routes/_nav/_auth'
import { Route as NavGuestSignUpImport } from './routes/_nav/_guest/sign-up'
import { Route as NavGuestLoginImport } from './routes/_nav/_guest/login'
import { Route as NavAuthEmployeesImport } from './routes/_nav/_auth/employees'
import { Route as NavAuthDashboardImport } from './routes/_nav/_auth/dashboard'

// Create/Update Routes

const NavRoute = NavImport.update({
  id: '/_nav',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NavGuestRoute = NavGuestImport.update({
  id: '/_guest',
  getParentRoute: () => NavRoute,
} as any)

const NavAuthRoute = NavAuthImport.update({
  id: '/_auth',
  getParentRoute: () => NavRoute,
} as any)

const NavGuestSignUpRoute = NavGuestSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => NavGuestRoute,
} as any)

const NavGuestLoginRoute = NavGuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NavGuestRoute,
} as any)

const NavAuthEmployeesRoute = NavAuthEmployeesImport.update({
  id: '/employees',
  path: '/employees',
  getParentRoute: () => NavAuthRoute,
} as any)

const NavAuthDashboardRoute = NavAuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => NavAuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_nav': {
      id: '/_nav'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavImport
      parentRoute: typeof rootRoute
    }
    '/_nav/_auth': {
      id: '/_nav/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavAuthImport
      parentRoute: typeof NavImport
    }
    '/_nav/_guest': {
      id: '/_nav/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavGuestImport
      parentRoute: typeof NavImport
    }
    '/_nav/_auth/dashboard': {
      id: '/_nav/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof NavAuthDashboardImport
      parentRoute: typeof NavAuthImport
    }
    '/_nav/_auth/employees': {
      id: '/_nav/_auth/employees'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof NavAuthEmployeesImport
      parentRoute: typeof NavAuthImport
    }
    '/_nav/_guest/login': {
      id: '/_nav/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NavGuestLoginImport
      parentRoute: typeof NavGuestImport
    }
    '/_nav/_guest/sign-up': {
      id: '/_nav/_guest/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof NavGuestSignUpImport
      parentRoute: typeof NavGuestImport
    }
  }
}

// Create and export the route tree

interface NavAuthRouteChildren {
  NavAuthDashboardRoute: typeof NavAuthDashboardRoute
  NavAuthEmployeesRoute: typeof NavAuthEmployeesRoute
}

const NavAuthRouteChildren: NavAuthRouteChildren = {
  NavAuthDashboardRoute: NavAuthDashboardRoute,
  NavAuthEmployeesRoute: NavAuthEmployeesRoute,
}

const NavAuthRouteWithChildren =
  NavAuthRoute._addFileChildren(NavAuthRouteChildren)

interface NavGuestRouteChildren {
  NavGuestLoginRoute: typeof NavGuestLoginRoute
  NavGuestSignUpRoute: typeof NavGuestSignUpRoute
}

const NavGuestRouteChildren: NavGuestRouteChildren = {
  NavGuestLoginRoute: NavGuestLoginRoute,
  NavGuestSignUpRoute: NavGuestSignUpRoute,
}

const NavGuestRouteWithChildren = NavGuestRoute._addFileChildren(
  NavGuestRouteChildren,
)

interface NavRouteChildren {
  NavAuthRoute: typeof NavAuthRouteWithChildren
  NavGuestRoute: typeof NavGuestRouteWithChildren
}

const NavRouteChildren: NavRouteChildren = {
  NavAuthRoute: NavAuthRouteWithChildren,
  NavGuestRoute: NavGuestRouteWithChildren,
}

const NavRouteWithChildren = NavRoute._addFileChildren(NavRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof NavGuestRouteWithChildren
  '/dashboard': typeof NavAuthDashboardRoute
  '/employees': typeof NavAuthEmployeesRoute
  '/login': typeof NavGuestLoginRoute
  '/sign-up': typeof NavGuestSignUpRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof NavGuestRouteWithChildren
  '/dashboard': typeof NavAuthDashboardRoute
  '/employees': typeof NavAuthEmployeesRoute
  '/login': typeof NavGuestLoginRoute
  '/sign-up': typeof NavGuestSignUpRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_nav': typeof NavRouteWithChildren
  '/_nav/_auth': typeof NavAuthRouteWithChildren
  '/_nav/_guest': typeof NavGuestRouteWithChildren
  '/_nav/_auth/dashboard': typeof NavAuthDashboardRoute
  '/_nav/_auth/employees': typeof NavAuthEmployeesRoute
  '/_nav/_guest/login': typeof NavGuestLoginRoute
  '/_nav/_guest/sign-up': typeof NavGuestSignUpRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/dashboard' | '/employees' | '/login' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/dashboard' | '/employees' | '/login' | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/_nav'
    | '/_nav/_auth'
    | '/_nav/_guest'
    | '/_nav/_auth/dashboard'
    | '/_nav/_auth/employees'
    | '/_nav/_guest/login'
    | '/_nav/_guest/sign-up'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NavRoute: typeof NavRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NavRoute: NavRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_nav"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_nav": {
      "filePath": "_nav.tsx",
      "children": [
        "/_nav/_auth",
        "/_nav/_guest"
      ]
    },
    "/_nav/_auth": {
      "filePath": "_nav/_auth.tsx",
      "parent": "/_nav",
      "children": [
        "/_nav/_auth/dashboard",
        "/_nav/_auth/employees"
      ]
    },
    "/_nav/_guest": {
      "filePath": "_nav/_guest.tsx",
      "parent": "/_nav",
      "children": [
        "/_nav/_guest/login",
        "/_nav/_guest/sign-up"
      ]
    },
    "/_nav/_auth/dashboard": {
      "filePath": "_nav/_auth/dashboard.tsx",
      "parent": "/_nav/_auth"
    },
    "/_nav/_auth/employees": {
      "filePath": "_nav/_auth/employees.tsx",
      "parent": "/_nav/_auth"
    },
    "/_nav/_guest/login": {
      "filePath": "_nav/_guest/login.tsx",
      "parent": "/_nav/_guest"
    },
    "/_nav/_guest/sign-up": {
      "filePath": "_nav/_guest/sign-up.tsx",
      "parent": "/_nav/_guest"
    }
  }
}
ROUTE_MANIFEST_END */
